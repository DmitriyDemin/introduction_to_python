# Урок 2. Циклы (for, while)

# На столе лежат n монеток. Некоторые из монеток лежат вверх решкой, а некоторые – гербом.
# Ваша задача - определить минимальное количество монеток, которые нужно перевернуть, чтобы все монетки
# лежали одной и той же стороной вверх.
# Входные данные:
# На вход программе подается список coins, где coins[i] равно 0, если i-я монетка лежит гербом вверх,
# и равно 1, если i-я монетка лежит решкой вверх. Размер списка не превышает 1000 элементов.
# Выходные данные:
# Программа должна вывести одно целое число - минимальное количество монеток, которые нужно перевернуть.

# coins = [1, 1, 1, 1, 1, 0]

# Введите ваше решение ниже
i = 0
count = 0
while i < len(coins):
        if coins[i] == 0:
            count = count + 1
        i = i+1
if count < len(coins)-count:
    print (count)
else:
    print (len(coins)-count)


# task_2
# Петя и Катя – брат и сестра. Петя – студент, а Катя – школьница. Петя помогает Кате по математике.
# Он задумывает два натуральных числа X и Y (X,Y≤1000), а Катя должна их отгадать. Для этого Петя делает
# две подсказки. Он называет сумму этих чисел S и их произведение P. Помогите Кате отгадать задуманные
# Петей числа.
# Примечание: числа S и P задавать не нужно, они будут передаваться в тестах. В результате 
# вы должны вывести все возможные пары чисел X и Y через пробел, такие что X <= Y.

# s = 9
# p = 20

list_1 = [i for i in range(1,1001)]
list_2 = [j for j in range(1,1001)]

for i in list_1:
    for j in list_1:
        if i+j == s and i*j == p and i <= j:
            print (i,j)

# task_3
Требуется вывести все целые степени двойки (т.е. числа вида 2k), не превосходящие числаN.
# n=15

# Введите ваше решение ниже
if n>2:
    print (1)
    print (2)
x = 2
while x < n:
    x = x*2
    if x <= n:
        print (x)